category=Amba;
ip_hmux~ehl_ahb_matrix~EHL~1.0~~AHB Bus Matrix~SNUM:A:8:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16:Number of Slaves%MNUM:A:8:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16:Number of Masters%SLV0_BASE:B:32'h0:Slave 0 Base address%SLV0_MASK:B:32'h0:Slave 0 address mask%SLV1_BASE:B:32'h0:Slave 1 Base address%SLV1_MASK:B:32'h0:Slave 1 address mask%SLV2_BASE:B:32'h0:Slave 2 Base address%SLV2_MASK:B:32'h0:Slave 2 address mask%SLV3_BASE:B:32'h0:Slave 3 Base address%SLV3_MASK:B:32'h0:Slave 3 address mask%SLV4_BASE:B:32'h0:Slave 4 Base address%SLV4_MASK:B:32'h0:Slave 4 address mask%SLV5_BASE:B:32'h0:Slave 5 Base address%SLV5_MASK:B:32'h0:Slave 5 address mask%SLV6_BASE:B:32'h0:Slave 6 Base address%SLV6_MASK:B:32'h0:Slave 6 address mask%SLV7_BASE:B:32'h0:Slave 7 Base address%SLV7_MASK:B:32'h0:Slave 7 address mask%SLV8_BASE:B:32'h0:Slave 8 Base address%SLV8_MASK:B:32'h0:Slave 8 address mask%SLV9_BASE:B:32'h0:Slave 9 Base address%SLV9_MASK:B:32'h0:Slave 9 address mask%SLV10_BASE:B:32'h0:Slave 10 Base address%SLV10_MASK:B:32'h0:Slave 10 address mask%SLV11_BASE:B:32'h0:Slave 11 Base address%SLV11_MASK:B:32'h0:Slave 11 address mask%SLV12_BASE:B:32'h0:Slave 12 Base address%SLV12_MASK:B:32'h0:Slave 12 address mask%SLV13_BASE:B:32'h0:Slave 13 Base address%SLV13_MASK:B:32'h0:Slave 13 address mask%SLV14_BASE:B:32'h0:Slave 14 Base address%SLV14_MASK:B:32'h0:Slave 14 address mask%SLV15_BASE:B:32'h0:Slave 15 Base address%SLV15_MASK:B:32'h0:Slave 15 address mask~amba/doc/ehl_ahb_matrix.html
category=Base;
ip_fifo~ehl_fifo~Eshell~1.0~~First-In First-Out~WIDTH_DIN:A:32:8 16 32 64:Number of bits in write data bus%WIDTH_DOUT:A:8:8 16 32 64:Number of bits in read data bus%DEPTH:A:16:2 4 8 16 32 64 128:Number of FIFO entries (in terms of WIDTH_DIN)%SYNC_STAGE:A:2:0 1 2 3:Number of serial flops between clock domains%USE_DPRAM:A:0:0 1:RAM type(0-SPRAM, 1-DPRAM)~cdc/doc/ehl_fifo.html
ip_timer~ehl_timer~Eshell~1.0~~General Purpose Timer~SYNC_STAGE:A:2:0 1 2 3:Number of serial flops between clock domains%BUS_WIDTH:A:32:8 32 64:System bus width%NTIMERS:A:1:1 2 3 4:Number of timers%TIMER_WIDTH:A:32:8 16 24 32:Timer width%SYNC_MODE:A:0:0 1:Mode(0 - synchronous / 1 - asynchronous)%PWM_ENA:A:0:0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15:Active high enable for timerN PWM functionality%CPT_ENA:A:0:0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15:Active high enable for timerN capture functionality%CMP_ENA:A:0:0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15:Active high enable for timerN compare functionality%CPT_SYNC:B:8'd255:Active high presence of capture input synchronizer%USE_CG:A:1:0 1:Use internal clock gaters(1 - use / 0 - do not use)~timer/doc/timer/ehl_timer.html
ip_wdt~ehl_wdt~Eshell~1.0~~Watchdog Timer~WIDTH:A:32:8 16 32:Number of timer bits~timer/doc/wdt/ehl_wdt.html
#category=DSP;
#ip_dsp~DSP~IDM~1.0~~DSP Core~A_SIGNED:A:false:false true:Sign of A operand%B_SIGNED:A:false:false true:Sign of B operand%C_SIGNED:A:false:false true:Sign of C operand%A_WIDTH:A:18:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44:Width of A operand%B_WIDTH:A:18:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44:Width of B operand%C_WIDTH:A:36:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44:Width of C operand%Q_WIDTH:A:44:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44:Width of result%MULT:A:false:false true:Use multiplier%ADD:A:true:false true:Use adder%ROUND:A:false:false true:Round result~share/doc/todo.html
#ip_sincos~sw_sincos~EHL~1.0~~Sine wave~phase:A:4:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32:Number of bits in phase input signal%wave:A:4:4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31:Number of bits in wave output signal~share/doc/todo.html
category=Interconnect;
ip_gpio~ehl_gpio~Eshell~1.0~FP~General Purpose IO~WIDTH:A:32:8 16 32:Width of port%INPUT_FILTER_ENA:B:32'hFFFFFFFF:Mask for Input Flops%IFG_POLARITY:A:1:0 1:Polarity of interrupt%GDOR_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GDOR access types%GDOR_INIT:A:0:0 1:initial GDOR value%GOER_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GOER access types%GOER_INIT:A:0:0 1:initial GOER value%GFER_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GFER access types%GFER_INIT:A:0:0 1:initial GFER value%GPER_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GPER access types%GPER_INIT:A:0:0 1:initial GPER value%GPTR_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GPTR acess types%GPTR_INIT:A:0:0 1:initial GPTR value%GIER_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GIER access types%GIER_INIT:A:0:0 1:initial GIER value%GISR_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GISR access types%GISR_INIT:A:0:0 1:initial GISR value%READ_GIFR_ENA:A:1:0 1:Enable Read GIFR command%GIFR_INIT:A:0:0 1:initial GIFR value%READ_GDIR_ENA:A:1:0 1:Enable Read GDIR command%GCMR_ENA:A:11111:00000 00001 00010 00011 00100 00101 00110 00111 01000 01001 01010 01011 01100 01101 01110 01111 10000 10001 10010 10011 10100 10101 10110 10111 11000 11001 11010 11011 11100 11101 11110 11111:Enable GCMR access types%GCMR_INIT:A:0:0 1:initial GCMR value%REGISTERED_OUTPUT:A:0:0 1:Use output registers on application interface~gpio/doc/ehl_gpio.html
#ip_i2c~i2c~EHL~1.0~FP~Inter-IC~CDC_SYNC_STAGE:A:2:0 1 2 3:Number of Synchronization Stages%TX_FIFO_DEPTH:A:4:2 3 4 5 6 7 8 9 10 11 12 13 14 15 16:Number of bytes in command(transmit) FIFO%RX_FIFO_DEPTH:A:4:2 3 4 5 6 7 8 9 10 11 12 13 14 15 16:Number of bytes in receive FIFO~i2c/doc/ehl_i2c.html
ip_lssi~ehl_lssi~Eshell~1.0~FP~SPI / UART Controller~FIFO_SIZE:A:16:4 8 16 32 64 128:Size of receive / transmit FIFO (in terms of bytes)%TICKS_TO_BIT:A:0:0 1 2:Number of clocks (2**(2+THIS_PARAMETER)) for every data bit%TS_WIDTH:A:8:1 2 3 4 5 6 7 8:Number of Target Select bits%ECC_ENA:A:0:0 1:Enable SEC Hamming code for FIFOs%USE_CG:A:1:0 1:Use internal clock gaters(1 - use / 0 - do not use)%DEVICE_CFG:A:3:1 2 3:Enable core functionality(if set), bit [0] enables SPI, bit [1] enables UART~lssi/doc/ehl_lssi.html
#ip_ethernet~eth_mac~EHL~1.0~~Ethernet MAC Core~TX_BUFFER_SIZE:A:8192:256 512 1024 2048 4096 8192 16384 32768 65536:Number of DWORDS in Tx buffer%RX_BUFFER_SIZE:A:8192:256 512 1024 2048 4096 8192 16384 32768 65536:Number of DWORDS in Rx buffer%MIIM_ENA:A:1:0 1:Enable Media Independent Interface Management(MIIM)%DEFAULT_MAC:B:48'h000000000000:Default MAC Address(not supported in GUI)~ethernet/doc/ehl_ethernet.html
category=Memory;
#ip_asram~sw_asram~Eshell~1.0~SP~Asynchronous RAM-ROM Controller~DATA_WIDTH:A:32:8 16 32 64:Width of the data bus%ADR_WIDTH:A:16:14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32:Width of the address bus%BURST_LEN:A:4:1 2 4 8:Relation between input DATA WIDTH and ASRAM DATA WIDTH%ENDIAN_MODE:A:0:0 1:Endiannes%CS_ADDR_BITS:A:0:0 1 2 3:Number of MSB address bits used for CS decoding~share/doc/todo.html
#ip_sdram~sw_sdram~Eshell~2.1~SP~Synchronous DRAM Controller~DATA_WIDTH:A:8:8 16 32 64:Number of bits in data input bus%SDRAM_WIDTH:A:8:8 16 32 64:Number of bits in SDRAM data bus%BANK_ADDR_WIDTH:A:2:2:Number of bits in Bank address%CS_ADDR_BITS:A:0:0 1 2:Number of bits for chip select~share/doc/todo.html
ip_ddr~ehl_ddr~EHL~1.0~~Synchronous DDR4-3-2 Controller~AXI_WIDTH:A:32:32 64 128:AXI bus width%AXI_ID_WIDTH:A:4:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16:Width of AXI ID signals%SDRAM_WIDTH:A:16:8 16 32 64:SDRAM bus width%ECC_ENA:A:0:0 1:Using Hamming code%RANK_CNT:A:4:1 2 4:Number of DDR ICs%AXI_QUEUE_DEPTH:A:2:2 4:Number of AXI transactions%ERROR_FIFO_DEPTH:A:4:0 1 2 4 8:Depth of Error addresses FIFO%RAM_TECHNOLOGY:A:0:0 5:Target technology%CDC_SYNC_STAGE:A:2:0 1 2 3:Number of CDC flops%SYNCHRONIZE_RESETS:A:0:0 1:Using internal reset synchronizers%RAM_MODES:A:1:1 2 3:Supported RAM protocols%PHY_TYPE:A:0:0 1 2 3 4 5:PHY selection~ddr/doc/ehl_ddr.html
category=Fec;
#ip_crc~ehl_crc~Eshell~1.0~FP~Cyclic Redundancy Checking~DATA_WIDTH:A:4:1 2 4 8 16 32 64 128 256 512 1024:Input data width%POLY_WIDTH:A:32:1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32:Generation Polynomial width%BIT_ORDER:A:0:0 1:MSB-LSB order of Bits%POLY_COEF:B:32'h04C11DB7:Generation polynomial~fec/doc/ehl_ecc.html
ip_ecc~ehl_ecc~Eshell~1.0~SP~Hamming Error Correction Code~WIDTH:A:8:8 16 32 64:Input data width%SECDED:A:1:0 1:COrrection mode(1 - SECDED, 0 - SEC)~fec/doc/ehl_ecc.html
#ip_rs~sw_rs~Eshell~1.0~SP~Reed-Solomon Decoder-Encoder~swidth:A:4:3 4 5 6 7 8 9 10 11 12:Width of data symbol%dsymbols:A:11:2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255:Number of data symbols%efixed:A:2:1 2 3 4 5 6 7:Number of fixed errors~share/doc/todo.html
category=Video;
#ip_scaler~ehl_video_scale~EHL~1.0~FP~Uncompressed Video Scaler~DATA_WIDTH:A:8:8 10 12 14 16:Pixel bit width%X_WIDTH:A:12:8 9 10 11 12 13 14 15 16:Bit width of Horizontal resolution%Y_WIDTH:A:12:8 9 10 11 12 13 14 15 16:Bit width of vertical resolution%SCALE_FRAC_WIDTH:A:16:12 13 14 15 16 17 18 19 20:Bit width of fractional part of scaling factors%FIFO_DEPTH:A:16:16 32 64:Pixel size of output FIFO~share/doc/todo.html
ip_csc~ehl_color_space_converter~EHL~1.0~~RGB-YCrCb Color Space Converter~PIXEL_WIDTH:A:8:8:Bit width of pixel%PIPE_STAGE:A:0:0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15:Pipeline registers mask~vpu/doc/ehl_csc.html
#ip_chroma_resample~ehl_chroma_resampler~EHL~1.0~~YCrCb Chroma Resampler~PIXEL_WIDTH:A:8:8:Bit width of pixel~share/doc/todo.html
#ip_sdi~ehl_sdi~EHL~1.0~~SDI SMPTE 259/292/425~~sdi/doc/ehl_sdi.html
#ip_vpu~ehl_vpu~EHL~1.0~~Video Processing Unit (VPU)~~vpu/doc/ehl_vpu.html
